plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

repositories {
    //geckolib
    maven { url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }

    // Cloth config api for custom configs
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }

    // cursemaven
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }


    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }

    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }

    maven { url = "https://maven.kyrptonaught.dev" }

    // simple voice chat api
    maven { url = 'https://maven.maxhenkel.de/repository/public' }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

configurations.configureEach {
    resolutionStrategy {
        force("net.fabricmc:fabric-loader:$loader_version")
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.18:3.0.80'

    // Cloth config api for custom configs
    modApi("me.shedaniel.cloth:cloth-config-fabric:6.4.90") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Revive mod
    modImplementation "curse.maven:revive-533879:3745883"

    // Dehydration mod
    modImplementation "curse.maven:dehydration-410830:3786010"

    // Custom Portal API
    modImplementation "net.kyrptonaught:customportalapi:${project.customportalapi_version}"
    include "net.kyrptonaught:customportalapi:${project.customportalapi_version}"

    // RPGZ
    modImplementation "curse.maven:rpgz-404828:3683648"

    // simple voice chat api
    implementation "de.maxhenkel.voicechat:voicechat-api:${project.voicechat_api_version}"
    modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${project.minecraft_version}-${project.voicechat_api_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Add the datagen output to the jar resources.
sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

// Create the datagen runs.
loom {
    // ...
    runs {
        datagenClient {
            client()
            name "Data Generation Client"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=nemuelch"

            ideConfigGenerated = true
            runDir "build/datagen"
        }
    }
    accessWidenerPath = file("src/main/resources/nemuelch.accesswidener")
    // ...
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}