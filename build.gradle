plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// modrinth maven
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}

	// curse maven (CurseForge)
	exclusiveContent {
		forRepository {
			maven {
				url "https://cursemaven.com"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}

	// cloth config
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	// geckolib
	maven { url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}

	// simple voice chat api
	maven { url = 'https://maven.maxhenkel.de/repository/public' }
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// GeckoLib lib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"

	// cloth config lib
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Revive mod
	modImplementation "curse.maven:revive-${project.revive_curseforge_version}"

	// Dehydration mod
	modImplementation "curse.maven:dehydration-${project.dehydration_curseforge_version}"

	// RPGZ mod
	modImplementation "curse.maven:rpgz-${project.rpgz_curseforge_version}"

	// simple voice chat api
	implementation "de.maxhenkel.voicechat:voicechat-api:${project.voicechat_api_version}"
	modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${project.minecraft_version}-${project.voicechat_api_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}